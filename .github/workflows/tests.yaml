name: "Test"
on:
  # Workflow dispatch is used for manual triggers
  workflow_dispatch:
  # Workflow call is used for called from another workflow
  workflow_call:
    secrets:
      ACR_SECRET:
        required: false

env:
  IMAGE_REGISTRY: heracles.azurecr.io
  CR_LOGIN: heracles
  API_IMAGE: heracles.azurecr.io/dmt/api
  WEB_IMAGE: heracles.azurecr.io/dmt/web

jobs:
  common-checks:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master

      - name: Set up python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install pre-commit
        run: pip install pre-commit

      - name: Check JSON
        run: pre-commit run check-json --all-files

      - name: Check YAML
        run: pre-commit run check-yaml --all-files

  test-api:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master

      - name: Set up python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install pre-commit
        run: pip install pre-commit

      - name: Check valid Python files
        run: pre-commit run check-ast --all-files

      - name: Build API image
        run: |
          docker login -u $CR_LOGIN -p ${{ secrets.ACR_SECRET }} $IMAGE_REGISTRY
          docker pull $API_IMAGE
          docker build --cache-from $API_IMAGE --target development --tag api-development ./api

      - name: Black Linting
        run: docker run --rm api-development black --check --diff --exclude something .

      - name: Bandit Static Code Security Analysis
        run: docker run --rm api-development bandit --recursive . --exclude ./tests

      - name: Safety - Dependencies CVE Check
        run: docker run --rm api-development safety check

      - name: API Unit Tests
        run: docker run --rm api-development pytest tests

      - name: Documentation Check
        run: docker run --rm api-development interrogate

      - name: Integration tests
        run: docker-compose -f docker-compose.yml -f docker-compose.ci.yml run api behave

  test-web:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master

      - name: Install Precommit
        run: pip install pre-commit

      - name: Run prettier formatting
        run: pre-commit run prettier --all-files
        
      - name: Build Web Image
        run: |
          docker login -u $CR_LOGIN -p ${{ secrets.ACR_SECRET }} $IMAGE_REGISTRY
          docker pull $WEB_IMAGE
          docker build --cache-from $WEB_IMAGE --target development --tag web-dev ./web
